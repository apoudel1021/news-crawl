# configuration for Elasticsearch resources

config:
  # ES metricsConsumer
  es.metrics.addresses: "http://localhost:9200"
  es.metrics.index.name: "metrics"
  es.metrics.doc.type: "datapoint"
  es.metrics.settings:
    cluster.name: "elasticsearch"
  
  # ES spout and persistence bolt
  es.status.addresses: "http://localhost:9200"
  es.status.index.name: "status"
  es.status.doc.type: "status"
  #es.status.user: "USERNAME"
  #es.status.password: "PASSWORD"
  # the routing is done on the value of 'partition.url.mode'
  es.status.routing: true
  # stores the value used for the routing as a separate field
  # needed by the spout implementations
  es.status.routing.fieldname: "metadata.hostname"
  es.status.bulkActions: 500
  es.status.flushInterval: "5s"
  es.status.concurrentRequests: 1
  es.status.settings:
    cluster.name: "elasticsearch"
  
  ################
  # spout config #
  ################
  
  # positive or negative filter parsable by the Lucene Query Parser
  # es.status.filterQuery: "-(metadata.hostname:stormcrawler.net)"

  # time in secs for which the URLs will be considered for fetching after a ack of fail
  # need a high value to avoid duplicates by URLs added multiple times to the fetcher
  # queues, should be close to
  #    fetcher.max.crawl.delay * fetcher.max.queue.size
  spout.ttl.purgatory: 1200

  # Min time (in msecs) to allow between 2 successive queries (per bucket) to ES
  spout.min.delay.queries: 30000

  # Delay since previous query date (in secs) after which the nextFetchDate value will be reset
  # Setting this to -1 or a large value means that the ES will cache the results but also that less and less results
  # might be returned.
  # - should reset to avoid that a bucket with many URLs blocks incrementing the date to look
  #   for next fetches for a specific bucket. May happen if a news sitemap adds 1000s of URLs.
  spout.reset.fetchdate.after: 1200

  es.status.max.buckets: 200
  # max. URLs per bucket (= domain name): 30 sec. / 3 sec. fetch delay = 10
  # but set to a lower number for domains with longer crawl-delay
  # cf. also fetcher.max.queue.size and fetcher.max.urls.in.queues
  es.status.max.urls.per.bucket: 6
  # field to group the URLs into buckets
  es.status.bucket.field: "metadata.hostname"
  # field to sort the URLs within a bucket
  es.status.bucket.sort.field: "nextFetchDate"
  # field to sort the buckets
  es.status.global.sort.field: "nextFetchDate"

    # CollapsingSpout : limits the deep paging by resetting the start offset for the ES query
  es.status.max.start.offset: 500

  # AggregationSpout : sampling improves the performance on large crawls
  es.status.sample: false

  # AggregationSpout (expert): adds this value in mins to the latest date returned in the results and
  # use it as nextFetchDate
  es.status.recentDate.increase: -1
  es.status.recentDate.min.gap: -1

  topology.metrics.consumer.register:
       - class: "com.digitalpebble.stormcrawler.elasticsearch.metrics.MetricsConsumer"
         parallelism.hint: 1
         #whitelist:
         #  - "fetcher_counter"
         #  - "fetcher_average.bytes_fetched"
         #blacklist:
         #  - "__receive.*"
